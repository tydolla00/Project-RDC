
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"
export type * from '../models'
export type * from './prismaNamespace'
export const Decimal = runtime.Decimal
export const ModelName = {
  Player: 'Player',
  Game: 'Game',
  GameStat: 'GameStat',
  Session: 'Session',
  GameSet: 'GameSet',
  Match: 'Match',
  PlayerSession: 'PlayerSession',
  PlayerStat: 'PlayerStat',
  User: 'User',
  SheetSync: 'SheetSync',
  SessionEditRequest: 'SessionEditRequest',
  SessionRevision: 'SessionRevision'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const PlayerScalarFieldEnum = {
  playerId: 'playerId',
  playerName: 'playerName'
} as const

export type PlayerScalarFieldEnum = (typeof PlayerScalarFieldEnum)[keyof typeof PlayerScalarFieldEnum]


export const GameScalarFieldEnum = {
  gameId: 'gameId',
  gameName: 'gameName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type GameScalarFieldEnum = (typeof GameScalarFieldEnum)[keyof typeof GameScalarFieldEnum]


export const GameStatScalarFieldEnum = {
  statId: 'statId',
  statName: 'statName',
  gameId: 'gameId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
} as const

export type GameStatScalarFieldEnum = (typeof GameStatScalarFieldEnum)[keyof typeof GameStatScalarFieldEnum]


export const SessionScalarFieldEnum = {
  sessionId: 'sessionId',
  sessionName: 'sessionName',
  sessionUrl: 'sessionUrl',
  gameId: 'gameId',
  thumbnail: 'thumbnail',
  date: 'date',
  videoId: 'videoId',
  mvpId: 'mvpId',
  mvpDescription: 'mvpDescription',
  mvpStats: 'mvpStats',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isApproved: 'isApproved',
  createdBy: 'createdBy'
} as const

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


export const GameSetScalarFieldEnum = {
  setId: 'setId',
  sessionId: 'sessionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type GameSetScalarFieldEnum = (typeof GameSetScalarFieldEnum)[keyof typeof GameSetScalarFieldEnum]


export const MatchScalarFieldEnum = {
  matchId: 'matchId',
  setId: 'setId',
  date: 'date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MatchScalarFieldEnum = (typeof MatchScalarFieldEnum)[keyof typeof MatchScalarFieldEnum]


export const PlayerSessionScalarFieldEnum = {
  playerSessionId: 'playerSessionId',
  playerId: 'playerId',
  sessionId: 'sessionId',
  matchId: 'matchId',
  setId: 'setId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type PlayerSessionScalarFieldEnum = (typeof PlayerSessionScalarFieldEnum)[keyof typeof PlayerSessionScalarFieldEnum]


export const PlayerStatScalarFieldEnum = {
  playerStatId: 'playerStatId',
  playerId: 'playerId',
  gameId: 'gameId',
  playerSessionId: 'playerSessionId',
  statId: 'statId',
  value: 'value',
  date: 'date'
} as const

export type PlayerStatScalarFieldEnum = (typeof PlayerStatScalarFieldEnum)[keyof typeof PlayerStatScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const SheetSyncScalarFieldEnum = {
  id: 'id',
  sheetName: 'sheetName',
  lastRow: 'lastRow',
  lastVideoId: 'lastVideoId',
  lastUpdated: 'lastUpdated',
  summary: 'summary'
} as const

export type SheetSyncScalarFieldEnum = (typeof SheetSyncScalarFieldEnum)[keyof typeof SheetSyncScalarFieldEnum]


export const SessionEditRequestScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  proposerId: 'proposerId',
  proposedData: 'proposedData',
  status: 'status',
  reviewerId: 'reviewerId',
  reviewNote: 'reviewNote',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  reviewedAt: 'reviewedAt',
  appliedAt: 'appliedAt',
  appliedBy: 'appliedBy'
} as const

export type SessionEditRequestScalarFieldEnum = (typeof SessionEditRequestScalarFieldEnum)[keyof typeof SessionEditRequestScalarFieldEnum]


export const SessionRevisionScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  snapshot: 'snapshot',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
} as const

export type SessionRevisionScalarFieldEnum = (typeof SessionRevisionScalarFieldEnum)[keyof typeof SessionRevisionScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const JsonNullValueInput = {
  JsonNull: JsonNull
} as const

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

