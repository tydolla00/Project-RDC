
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `SessionEditRequest` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model SessionEditRequest
 * 
 */
export type SessionEditRequestModel = runtime.Types.Result.DefaultSelection<Prisma.$SessionEditRequestPayload>

export type AggregateSessionEditRequest = {
  _count: SessionEditRequestCountAggregateOutputType | null
  _avg: SessionEditRequestAvgAggregateOutputType | null
  _sum: SessionEditRequestSumAggregateOutputType | null
  _min: SessionEditRequestMinAggregateOutputType | null
  _max: SessionEditRequestMaxAggregateOutputType | null
}

export type SessionEditRequestAvgAggregateOutputType = {
  id: number | null
  sessionId: number | null
}

export type SessionEditRequestSumAggregateOutputType = {
  id: number | null
  sessionId: number | null
}

export type SessionEditRequestMinAggregateOutputType = {
  id: number | null
  sessionId: number | null
  proposerId: string | null
  status: $Enums.EditStatus | null
  reviewerId: string | null
  reviewNote: string | null
  createdAt: Date | null
  updatedAt: Date | null
  reviewedAt: Date | null
  appliedAt: Date | null
  appliedBy: string | null
}

export type SessionEditRequestMaxAggregateOutputType = {
  id: number | null
  sessionId: number | null
  proposerId: string | null
  status: $Enums.EditStatus | null
  reviewerId: string | null
  reviewNote: string | null
  createdAt: Date | null
  updatedAt: Date | null
  reviewedAt: Date | null
  appliedAt: Date | null
  appliedBy: string | null
}

export type SessionEditRequestCountAggregateOutputType = {
  id: number
  sessionId: number
  proposerId: number
  proposedData: number
  status: number
  reviewerId: number
  reviewNote: number
  createdAt: number
  updatedAt: number
  reviewedAt: number
  appliedAt: number
  appliedBy: number
  _all: number
}


export type SessionEditRequestAvgAggregateInputType = {
  id?: true
  sessionId?: true
}

export type SessionEditRequestSumAggregateInputType = {
  id?: true
  sessionId?: true
}

export type SessionEditRequestMinAggregateInputType = {
  id?: true
  sessionId?: true
  proposerId?: true
  status?: true
  reviewerId?: true
  reviewNote?: true
  createdAt?: true
  updatedAt?: true
  reviewedAt?: true
  appliedAt?: true
  appliedBy?: true
}

export type SessionEditRequestMaxAggregateInputType = {
  id?: true
  sessionId?: true
  proposerId?: true
  status?: true
  reviewerId?: true
  reviewNote?: true
  createdAt?: true
  updatedAt?: true
  reviewedAt?: true
  appliedAt?: true
  appliedBy?: true
}

export type SessionEditRequestCountAggregateInputType = {
  id?: true
  sessionId?: true
  proposerId?: true
  proposedData?: true
  status?: true
  reviewerId?: true
  reviewNote?: true
  createdAt?: true
  updatedAt?: true
  reviewedAt?: true
  appliedAt?: true
  appliedBy?: true
  _all?: true
}

export type SessionEditRequestAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which SessionEditRequest to aggregate.
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SessionEditRequests to fetch.
   */
  orderBy?: Prisma.SessionEditRequestOrderByWithRelationInput | Prisma.SessionEditRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.SessionEditRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SessionEditRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SessionEditRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned SessionEditRequests
  **/
  _count?: true | SessionEditRequestCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: SessionEditRequestAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: SessionEditRequestSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: SessionEditRequestMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: SessionEditRequestMaxAggregateInputType
}

export type GetSessionEditRequestAggregateType<T extends SessionEditRequestAggregateArgs> = {
      [P in keyof T & keyof AggregateSessionEditRequest]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSessionEditRequest[P]>
    : Prisma.GetScalarType<T[P], AggregateSessionEditRequest[P]>
}




export type SessionEditRequestGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionEditRequestWhereInput
  orderBy?: Prisma.SessionEditRequestOrderByWithAggregationInput | Prisma.SessionEditRequestOrderByWithAggregationInput[]
  by: Prisma.SessionEditRequestScalarFieldEnum[] | Prisma.SessionEditRequestScalarFieldEnum
  having?: Prisma.SessionEditRequestScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: SessionEditRequestCountAggregateInputType | true
  _avg?: SessionEditRequestAvgAggregateInputType
  _sum?: SessionEditRequestSumAggregateInputType
  _min?: SessionEditRequestMinAggregateInputType
  _max?: SessionEditRequestMaxAggregateInputType
}

export type SessionEditRequestGroupByOutputType = {
  id: number
  sessionId: number
  proposerId: string | null
  proposedData: unknown
  status: $Enums.EditStatus
  reviewerId: string | null
  reviewNote: string | null
  createdAt: Date
  updatedAt: Date
  reviewedAt: Date | null
  appliedAt: Date | null
  appliedBy: string | null
  _count: SessionEditRequestCountAggregateOutputType | null
  _avg: SessionEditRequestAvgAggregateOutputType | null
  _sum: SessionEditRequestSumAggregateOutputType | null
  _min: SessionEditRequestMinAggregateOutputType | null
  _max: SessionEditRequestMaxAggregateOutputType | null
}

type GetSessionEditRequestGroupByPayload<T extends SessionEditRequestGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SessionEditRequestGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof SessionEditRequestGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SessionEditRequestGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SessionEditRequestGroupByOutputType[P]>
      }
    >
  >



export type SessionEditRequestWhereInput = {
  AND?: Prisma.SessionEditRequestWhereInput | Prisma.SessionEditRequestWhereInput[]
  OR?: Prisma.SessionEditRequestWhereInput[]
  NOT?: Prisma.SessionEditRequestWhereInput | Prisma.SessionEditRequestWhereInput[]
  id?: Prisma.IntFilter<"SessionEditRequest"> | number
  sessionId?: Prisma.IntFilter<"SessionEditRequest"> | number
  proposerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  proposedData?: Prisma.JsonFilter<"SessionEditRequest">
  status?: Prisma.EnumEditStatusFilter<"SessionEditRequest"> | $Enums.EditStatus
  reviewerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  reviewNote?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  createdAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  reviewedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedBy?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  session?: Prisma.XOR<Prisma.SessionScalarRelationFilter, Prisma.SessionWhereInput>
  proposer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  reviewer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}

export type SessionEditRequestOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
  proposerId?: Prisma.SortOrderInput | Prisma.SortOrder
  proposedData?: Prisma.SortOrder
  status?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrderInput | Prisma.SortOrder
  reviewNote?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  reviewedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  appliedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  appliedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  session?: Prisma.SessionOrderByWithRelationInput
  proposer?: Prisma.UserOrderByWithRelationInput
  reviewer?: Prisma.UserOrderByWithRelationInput
}

export type SessionEditRequestWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.SessionEditRequestWhereInput | Prisma.SessionEditRequestWhereInput[]
  OR?: Prisma.SessionEditRequestWhereInput[]
  NOT?: Prisma.SessionEditRequestWhereInput | Prisma.SessionEditRequestWhereInput[]
  sessionId?: Prisma.IntFilter<"SessionEditRequest"> | number
  proposerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  proposedData?: Prisma.JsonFilter<"SessionEditRequest">
  status?: Prisma.EnumEditStatusFilter<"SessionEditRequest"> | $Enums.EditStatus
  reviewerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  reviewNote?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  createdAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  reviewedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedBy?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  session?: Prisma.XOR<Prisma.SessionScalarRelationFilter, Prisma.SessionWhereInput>
  proposer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
  reviewer?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}, "id">

export type SessionEditRequestOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
  proposerId?: Prisma.SortOrderInput | Prisma.SortOrder
  proposedData?: Prisma.SortOrder
  status?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrderInput | Prisma.SortOrder
  reviewNote?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  reviewedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  appliedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  appliedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.SessionEditRequestCountOrderByAggregateInput
  _avg?: Prisma.SessionEditRequestAvgOrderByAggregateInput
  _max?: Prisma.SessionEditRequestMaxOrderByAggregateInput
  _min?: Prisma.SessionEditRequestMinOrderByAggregateInput
  _sum?: Prisma.SessionEditRequestSumOrderByAggregateInput
}

export type SessionEditRequestScalarWhereWithAggregatesInput = {
  AND?: Prisma.SessionEditRequestScalarWhereWithAggregatesInput | Prisma.SessionEditRequestScalarWhereWithAggregatesInput[]
  OR?: Prisma.SessionEditRequestScalarWhereWithAggregatesInput[]
  NOT?: Prisma.SessionEditRequestScalarWhereWithAggregatesInput | Prisma.SessionEditRequestScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"SessionEditRequest"> | number
  sessionId?: Prisma.IntWithAggregatesFilter<"SessionEditRequest"> | number
  proposerId?: Prisma.StringNullableWithAggregatesFilter<"SessionEditRequest"> | string | null
  proposedData?: Prisma.JsonWithAggregatesFilter<"SessionEditRequest">
  status?: Prisma.EnumEditStatusWithAggregatesFilter<"SessionEditRequest"> | $Enums.EditStatus
  reviewerId?: Prisma.StringNullableWithAggregatesFilter<"SessionEditRequest"> | string | null
  reviewNote?: Prisma.StringNullableWithAggregatesFilter<"SessionEditRequest"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"SessionEditRequest"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"SessionEditRequest"> | Date | string
  reviewedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"SessionEditRequest"> | Date | string | null
  appliedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"SessionEditRequest"> | Date | string | null
  appliedBy?: Prisma.StringNullableWithAggregatesFilter<"SessionEditRequest"> | string | null
}

export type SessionEditRequestCreateInput = {
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
  session: Prisma.SessionCreateNestedOneWithoutSessionEditRequestsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedEditsInput
  reviewer?: Prisma.UserCreateNestedOneWithoutReviewedEditsInput
}

export type SessionEditRequestUncheckedCreateInput = {
  id?: number
  sessionId: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestUpdateInput = {
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  session?: Prisma.SessionUpdateOneRequiredWithoutSessionEditRequestsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedEditsNestedInput
  reviewer?: Prisma.UserUpdateOneWithoutReviewedEditsNestedInput
}

export type SessionEditRequestUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestCreateManyInput = {
  id?: number
  sessionId: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestUpdateManyMutationInput = {
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestListRelationFilter = {
  every?: Prisma.SessionEditRequestWhereInput
  some?: Prisma.SessionEditRequestWhereInput
  none?: Prisma.SessionEditRequestWhereInput
}

export type SessionEditRequestOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type SessionEditRequestCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  proposedData?: Prisma.SortOrder
  status?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  reviewNote?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  reviewedAt?: Prisma.SortOrder
  appliedAt?: Prisma.SortOrder
  appliedBy?: Prisma.SortOrder
}

export type SessionEditRequestAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
}

export type SessionEditRequestMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  reviewNote?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  reviewedAt?: Prisma.SortOrder
  appliedAt?: Prisma.SortOrder
  appliedBy?: Prisma.SortOrder
}

export type SessionEditRequestMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
  proposerId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  reviewerId?: Prisma.SortOrder
  reviewNote?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  reviewedAt?: Prisma.SortOrder
  appliedAt?: Prisma.SortOrder
  appliedBy?: Prisma.SortOrder
}

export type SessionEditRequestSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  sessionId?: Prisma.SortOrder
}

export type SessionEditRequestCreateNestedManyWithoutSessionInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput> | Prisma.SessionEditRequestCreateWithoutSessionInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput | Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput[]
  createMany?: Prisma.SessionEditRequestCreateManySessionInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestUncheckedCreateNestedManyWithoutSessionInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput> | Prisma.SessionEditRequestCreateWithoutSessionInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput | Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput[]
  createMany?: Prisma.SessionEditRequestCreateManySessionInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestUpdateManyWithoutSessionNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput> | Prisma.SessionEditRequestCreateWithoutSessionInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput | Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutSessionInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutSessionInput[]
  createMany?: Prisma.SessionEditRequestCreateManySessionInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutSessionInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutSessionInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutSessionInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutSessionInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type SessionEditRequestUncheckedUpdateManyWithoutSessionNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput> | Prisma.SessionEditRequestCreateWithoutSessionInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput | Prisma.SessionEditRequestCreateOrConnectWithoutSessionInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutSessionInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutSessionInput[]
  createMany?: Prisma.SessionEditRequestCreateManySessionInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutSessionInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutSessionInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutSessionInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutSessionInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type SessionEditRequestCreateNestedManyWithoutProposerInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput> | Prisma.SessionEditRequestCreateWithoutProposerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput | Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyProposerInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestCreateNestedManyWithoutReviewerInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput> | Prisma.SessionEditRequestCreateWithoutReviewerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput | Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyReviewerInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestUncheckedCreateNestedManyWithoutProposerInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput> | Prisma.SessionEditRequestCreateWithoutProposerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput | Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyProposerInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestUncheckedCreateNestedManyWithoutReviewerInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput> | Prisma.SessionEditRequestCreateWithoutReviewerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput | Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyReviewerInputEnvelope
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
}

export type SessionEditRequestUpdateManyWithoutProposerNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput> | Prisma.SessionEditRequestCreateWithoutProposerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput | Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutProposerInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutProposerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyProposerInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutProposerInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutProposerInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutProposerInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutProposerInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type SessionEditRequestUpdateManyWithoutReviewerNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput> | Prisma.SessionEditRequestCreateWithoutReviewerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput | Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutReviewerInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutReviewerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyReviewerInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutReviewerInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutReviewerInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutReviewerInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutReviewerInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type SessionEditRequestUncheckedUpdateManyWithoutProposerNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput> | Prisma.SessionEditRequestCreateWithoutProposerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput | Prisma.SessionEditRequestCreateOrConnectWithoutProposerInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutProposerInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutProposerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyProposerInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutProposerInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutProposerInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutProposerInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutProposerInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type SessionEditRequestUncheckedUpdateManyWithoutReviewerNestedInput = {
  create?: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput> | Prisma.SessionEditRequestCreateWithoutReviewerInput[] | Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput[]
  connectOrCreate?: Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput | Prisma.SessionEditRequestCreateOrConnectWithoutReviewerInput[]
  upsert?: Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutReviewerInput | Prisma.SessionEditRequestUpsertWithWhereUniqueWithoutReviewerInput[]
  createMany?: Prisma.SessionEditRequestCreateManyReviewerInputEnvelope
  set?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  disconnect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  delete?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  connect?: Prisma.SessionEditRequestWhereUniqueInput | Prisma.SessionEditRequestWhereUniqueInput[]
  update?: Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutReviewerInput | Prisma.SessionEditRequestUpdateWithWhereUniqueWithoutReviewerInput[]
  updateMany?: Prisma.SessionEditRequestUpdateManyWithWhereWithoutReviewerInput | Prisma.SessionEditRequestUpdateManyWithWhereWithoutReviewerInput[]
  deleteMany?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
}

export type EnumEditStatusFieldUpdateOperationsInput = {
  set?: $Enums.EditStatus
}

export type SessionEditRequestCreateWithoutSessionInput = {
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
  proposer?: Prisma.UserCreateNestedOneWithoutProposedEditsInput
  reviewer?: Prisma.UserCreateNestedOneWithoutReviewedEditsInput
}

export type SessionEditRequestUncheckedCreateWithoutSessionInput = {
  id?: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestCreateOrConnectWithoutSessionInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput>
}

export type SessionEditRequestCreateManySessionInputEnvelope = {
  data: Prisma.SessionEditRequestCreateManySessionInput | Prisma.SessionEditRequestCreateManySessionInput[]
  skipDuplicates?: boolean
}

export type SessionEditRequestUpsertWithWhereUniqueWithoutSessionInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  update: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutSessionInput, Prisma.SessionEditRequestUncheckedUpdateWithoutSessionInput>
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutSessionInput, Prisma.SessionEditRequestUncheckedCreateWithoutSessionInput>
}

export type SessionEditRequestUpdateWithWhereUniqueWithoutSessionInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutSessionInput, Prisma.SessionEditRequestUncheckedUpdateWithoutSessionInput>
}

export type SessionEditRequestUpdateManyWithWhereWithoutSessionInput = {
  where: Prisma.SessionEditRequestScalarWhereInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateManyMutationInput, Prisma.SessionEditRequestUncheckedUpdateManyWithoutSessionInput>
}

export type SessionEditRequestScalarWhereInput = {
  AND?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
  OR?: Prisma.SessionEditRequestScalarWhereInput[]
  NOT?: Prisma.SessionEditRequestScalarWhereInput | Prisma.SessionEditRequestScalarWhereInput[]
  id?: Prisma.IntFilter<"SessionEditRequest"> | number
  sessionId?: Prisma.IntFilter<"SessionEditRequest"> | number
  proposerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  proposedData?: Prisma.JsonFilter<"SessionEditRequest">
  status?: Prisma.EnumEditStatusFilter<"SessionEditRequest"> | $Enums.EditStatus
  reviewerId?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  reviewNote?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
  createdAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"SessionEditRequest"> | Date | string
  reviewedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedAt?: Prisma.DateTimeNullableFilter<"SessionEditRequest"> | Date | string | null
  appliedBy?: Prisma.StringNullableFilter<"SessionEditRequest"> | string | null
}

export type SessionEditRequestCreateWithoutProposerInput = {
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
  session: Prisma.SessionCreateNestedOneWithoutSessionEditRequestsInput
  reviewer?: Prisma.UserCreateNestedOneWithoutReviewedEditsInput
}

export type SessionEditRequestUncheckedCreateWithoutProposerInput = {
  id?: number
  sessionId: number
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestCreateOrConnectWithoutProposerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput>
}

export type SessionEditRequestCreateManyProposerInputEnvelope = {
  data: Prisma.SessionEditRequestCreateManyProposerInput | Prisma.SessionEditRequestCreateManyProposerInput[]
  skipDuplicates?: boolean
}

export type SessionEditRequestCreateWithoutReviewerInput = {
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
  session: Prisma.SessionCreateNestedOneWithoutSessionEditRequestsInput
  proposer?: Prisma.UserCreateNestedOneWithoutProposedEditsInput
}

export type SessionEditRequestUncheckedCreateWithoutReviewerInput = {
  id?: number
  sessionId: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestCreateOrConnectWithoutReviewerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput>
}

export type SessionEditRequestCreateManyReviewerInputEnvelope = {
  data: Prisma.SessionEditRequestCreateManyReviewerInput | Prisma.SessionEditRequestCreateManyReviewerInput[]
  skipDuplicates?: boolean
}

export type SessionEditRequestUpsertWithWhereUniqueWithoutProposerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  update: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutProposerInput, Prisma.SessionEditRequestUncheckedUpdateWithoutProposerInput>
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutProposerInput, Prisma.SessionEditRequestUncheckedCreateWithoutProposerInput>
}

export type SessionEditRequestUpdateWithWhereUniqueWithoutProposerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutProposerInput, Prisma.SessionEditRequestUncheckedUpdateWithoutProposerInput>
}

export type SessionEditRequestUpdateManyWithWhereWithoutProposerInput = {
  where: Prisma.SessionEditRequestScalarWhereInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateManyMutationInput, Prisma.SessionEditRequestUncheckedUpdateManyWithoutProposerInput>
}

export type SessionEditRequestUpsertWithWhereUniqueWithoutReviewerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  update: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedUpdateWithoutReviewerInput>
  create: Prisma.XOR<Prisma.SessionEditRequestCreateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedCreateWithoutReviewerInput>
}

export type SessionEditRequestUpdateWithWhereUniqueWithoutReviewerInput = {
  where: Prisma.SessionEditRequestWhereUniqueInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateWithoutReviewerInput, Prisma.SessionEditRequestUncheckedUpdateWithoutReviewerInput>
}

export type SessionEditRequestUpdateManyWithWhereWithoutReviewerInput = {
  where: Prisma.SessionEditRequestScalarWhereInput
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateManyMutationInput, Prisma.SessionEditRequestUncheckedUpdateManyWithoutReviewerInput>
}

export type SessionEditRequestCreateManySessionInput = {
  id?: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestUpdateWithoutSessionInput = {
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposer?: Prisma.UserUpdateOneWithoutProposedEditsNestedInput
  reviewer?: Prisma.UserUpdateOneWithoutReviewedEditsNestedInput
}

export type SessionEditRequestUncheckedUpdateWithoutSessionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestUncheckedUpdateManyWithoutSessionInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestCreateManyProposerInput = {
  id?: number
  sessionId: number
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewerId?: string | null
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestCreateManyReviewerInput = {
  id?: number
  sessionId: number
  proposerId?: string | null
  proposedData: unknown
  status?: $Enums.EditStatus
  reviewNote?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reviewedAt?: Date | string | null
  appliedAt?: Date | string | null
  appliedBy?: string | null
}

export type SessionEditRequestUpdateWithoutProposerInput = {
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  session?: Prisma.SessionUpdateOneRequiredWithoutSessionEditRequestsNestedInput
  reviewer?: Prisma.UserUpdateOneWithoutReviewedEditsNestedInput
}

export type SessionEditRequestUncheckedUpdateWithoutProposerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestUncheckedUpdateManyWithoutProposerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestUpdateWithoutReviewerInput = {
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  session?: Prisma.SessionUpdateOneRequiredWithoutSessionEditRequestsNestedInput
  proposer?: Prisma.UserUpdateOneWithoutProposedEditsNestedInput
}

export type SessionEditRequestUncheckedUpdateWithoutReviewerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type SessionEditRequestUncheckedUpdateManyWithoutReviewerInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sessionId?: Prisma.IntFieldUpdateOperationsInput | number
  proposerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  proposedData?: unknown
  status?: Prisma.EnumEditStatusFieldUpdateOperationsInput | $Enums.EditStatus
  reviewNote?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reviewedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  appliedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type SessionEditRequestSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  sessionId?: boolean
  proposerId?: boolean
  proposedData?: boolean
  status?: boolean
  reviewerId?: boolean
  reviewNote?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  reviewedAt?: boolean
  appliedAt?: boolean
  appliedBy?: boolean
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}, ExtArgs["result"]["sessionEditRequest"]>

export type SessionEditRequestSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  sessionId?: boolean
  proposerId?: boolean
  proposedData?: boolean
  status?: boolean
  reviewerId?: boolean
  reviewNote?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  reviewedAt?: boolean
  appliedAt?: boolean
  appliedBy?: boolean
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}, ExtArgs["result"]["sessionEditRequest"]>

export type SessionEditRequestSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  sessionId?: boolean
  proposerId?: boolean
  proposedData?: boolean
  status?: boolean
  reviewerId?: boolean
  reviewNote?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  reviewedAt?: boolean
  appliedAt?: boolean
  appliedBy?: boolean
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}, ExtArgs["result"]["sessionEditRequest"]>

export type SessionEditRequestSelectScalar = {
  id?: boolean
  sessionId?: boolean
  proposerId?: boolean
  proposedData?: boolean
  status?: boolean
  reviewerId?: boolean
  reviewNote?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  reviewedAt?: boolean
  appliedAt?: boolean
  appliedBy?: boolean
}

export type SessionEditRequestOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "sessionId" | "proposerId" | "proposedData" | "status" | "reviewerId" | "reviewNote" | "createdAt" | "updatedAt" | "reviewedAt" | "appliedAt" | "appliedBy", ExtArgs["result"]["sessionEditRequest"]>
export type SessionEditRequestInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}
export type SessionEditRequestIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}
export type SessionEditRequestIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  session?: boolean | Prisma.SessionDefaultArgs<ExtArgs>
  proposer?: boolean | Prisma.SessionEditRequest$proposerArgs<ExtArgs>
  reviewer?: boolean | Prisma.SessionEditRequest$reviewerArgs<ExtArgs>
}

export type $SessionEditRequestPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "SessionEditRequest"
  objects: {
    session: Prisma.$SessionPayload<ExtArgs>
    proposer: Prisma.$UserPayload<ExtArgs> | null
    reviewer: Prisma.$UserPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    sessionId: number
    proposerId: string | null
    proposedData: unknown
    status: $Enums.EditStatus
    reviewerId: string | null
    reviewNote: string | null
    createdAt: Date
    updatedAt: Date
    reviewedAt: Date | null
    appliedAt: Date | null
    appliedBy: string | null
  }, ExtArgs["result"]["sessionEditRequest"]>
  composites: {}
}

export type SessionEditRequestGetPayload<S extends boolean | null | undefined | SessionEditRequestDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload, S>

export type SessionEditRequestCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<SessionEditRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: SessionEditRequestCountAggregateInputType | true
  }

export interface SessionEditRequestDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SessionEditRequest'], meta: { name: 'SessionEditRequest' } }
  /**
   * Find zero or one SessionEditRequest that matches the filter.
   * @param {SessionEditRequestFindUniqueArgs} args - Arguments to find a SessionEditRequest
   * @example
   * // Get one SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SessionEditRequestFindUniqueArgs>(args: Prisma.SelectSubset<T, SessionEditRequestFindUniqueArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one SessionEditRequest that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SessionEditRequestFindUniqueOrThrowArgs} args - Arguments to find a SessionEditRequest
   * @example
   * // Get one SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SessionEditRequestFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, SessionEditRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first SessionEditRequest that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestFindFirstArgs} args - Arguments to find a SessionEditRequest
   * @example
   * // Get one SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SessionEditRequestFindFirstArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestFindFirstArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first SessionEditRequest that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestFindFirstOrThrowArgs} args - Arguments to find a SessionEditRequest
   * @example
   * // Get one SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SessionEditRequestFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more SessionEditRequests that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SessionEditRequests
   * const sessionEditRequests = await prisma.sessionEditRequest.findMany()
   * 
   * // Get first 10 SessionEditRequests
   * const sessionEditRequests = await prisma.sessionEditRequest.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const sessionEditRequestWithIdOnly = await prisma.sessionEditRequest.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends SessionEditRequestFindManyArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a SessionEditRequest.
   * @param {SessionEditRequestCreateArgs} args - Arguments to create a SessionEditRequest.
   * @example
   * // Create one SessionEditRequest
   * const SessionEditRequest = await prisma.sessionEditRequest.create({
   *   data: {
   *     // ... data to create a SessionEditRequest
   *   }
   * })
   * 
   */
  create<T extends SessionEditRequestCreateArgs>(args: Prisma.SelectSubset<T, SessionEditRequestCreateArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many SessionEditRequests.
   * @param {SessionEditRequestCreateManyArgs} args - Arguments to create many SessionEditRequests.
   * @example
   * // Create many SessionEditRequests
   * const sessionEditRequest = await prisma.sessionEditRequest.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends SessionEditRequestCreateManyArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many SessionEditRequests and returns the data saved in the database.
   * @param {SessionEditRequestCreateManyAndReturnArgs} args - Arguments to create many SessionEditRequests.
   * @example
   * // Create many SessionEditRequests
   * const sessionEditRequest = await prisma.sessionEditRequest.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many SessionEditRequests and only return the `id`
   * const sessionEditRequestWithIdOnly = await prisma.sessionEditRequest.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends SessionEditRequestCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a SessionEditRequest.
   * @param {SessionEditRequestDeleteArgs} args - Arguments to delete one SessionEditRequest.
   * @example
   * // Delete one SessionEditRequest
   * const SessionEditRequest = await prisma.sessionEditRequest.delete({
   *   where: {
   *     // ... filter to delete one SessionEditRequest
   *   }
   * })
   * 
   */
  delete<T extends SessionEditRequestDeleteArgs>(args: Prisma.SelectSubset<T, SessionEditRequestDeleteArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one SessionEditRequest.
   * @param {SessionEditRequestUpdateArgs} args - Arguments to update one SessionEditRequest.
   * @example
   * // Update one SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends SessionEditRequestUpdateArgs>(args: Prisma.SelectSubset<T, SessionEditRequestUpdateArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more SessionEditRequests.
   * @param {SessionEditRequestDeleteManyArgs} args - Arguments to filter SessionEditRequests to delete.
   * @example
   * // Delete a few SessionEditRequests
   * const { count } = await prisma.sessionEditRequest.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends SessionEditRequestDeleteManyArgs>(args?: Prisma.SelectSubset<T, SessionEditRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more SessionEditRequests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SessionEditRequests
   * const sessionEditRequest = await prisma.sessionEditRequest.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends SessionEditRequestUpdateManyArgs>(args: Prisma.SelectSubset<T, SessionEditRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more SessionEditRequests and returns the data updated in the database.
   * @param {SessionEditRequestUpdateManyAndReturnArgs} args - Arguments to update many SessionEditRequests.
   * @example
   * // Update many SessionEditRequests
   * const sessionEditRequest = await prisma.sessionEditRequest.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more SessionEditRequests and only return the `id`
   * const sessionEditRequestWithIdOnly = await prisma.sessionEditRequest.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends SessionEditRequestUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, SessionEditRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one SessionEditRequest.
   * @param {SessionEditRequestUpsertArgs} args - Arguments to update or create a SessionEditRequest.
   * @example
   * // Update or create a SessionEditRequest
   * const sessionEditRequest = await prisma.sessionEditRequest.upsert({
   *   create: {
   *     // ... data to create a SessionEditRequest
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SessionEditRequest we want to update
   *   }
   * })
   */
  upsert<T extends SessionEditRequestUpsertArgs>(args: Prisma.SelectSubset<T, SessionEditRequestUpsertArgs<ExtArgs>>): Prisma.Prisma__SessionEditRequestClient<runtime.Types.Result.GetResult<Prisma.$SessionEditRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of SessionEditRequests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestCountArgs} args - Arguments to filter SessionEditRequests to count.
   * @example
   * // Count the number of SessionEditRequests
   * const count = await prisma.sessionEditRequest.count({
   *   where: {
   *     // ... the filter for the SessionEditRequests we want to count
   *   }
   * })
  **/
  count<T extends SessionEditRequestCountArgs>(
    args?: Prisma.Subset<T, SessionEditRequestCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], SessionEditRequestCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a SessionEditRequest.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends SessionEditRequestAggregateArgs>(args: Prisma.Subset<T, SessionEditRequestAggregateArgs>): Prisma.PrismaPromise<GetSessionEditRequestAggregateType<T>>

  /**
   * Group by SessionEditRequest.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SessionEditRequestGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends SessionEditRequestGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SessionEditRequestGroupByArgs['orderBy'] }
      : { orderBy?: SessionEditRequestGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, SessionEditRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionEditRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the SessionEditRequest model
 */
readonly fields: SessionEditRequestFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SessionEditRequest.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SessionEditRequestClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  session<T extends Prisma.SessionDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SessionDefaultArgs<ExtArgs>>): Prisma.Prisma__SessionClient<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  proposer<T extends Prisma.SessionEditRequest$proposerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SessionEditRequest$proposerArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  reviewer<T extends Prisma.SessionEditRequest$reviewerArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SessionEditRequest$reviewerArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the SessionEditRequest model
 */
export interface SessionEditRequestFieldRefs {
  readonly id: Prisma.FieldRef<"SessionEditRequest", 'Int'>
  readonly sessionId: Prisma.FieldRef<"SessionEditRequest", 'Int'>
  readonly proposerId: Prisma.FieldRef<"SessionEditRequest", 'String'>
  readonly proposedData: Prisma.FieldRef<"SessionEditRequest", 'Json'>
  readonly status: Prisma.FieldRef<"SessionEditRequest", 'EditStatus'>
  readonly reviewerId: Prisma.FieldRef<"SessionEditRequest", 'String'>
  readonly reviewNote: Prisma.FieldRef<"SessionEditRequest", 'String'>
  readonly createdAt: Prisma.FieldRef<"SessionEditRequest", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"SessionEditRequest", 'DateTime'>
  readonly reviewedAt: Prisma.FieldRef<"SessionEditRequest", 'DateTime'>
  readonly appliedAt: Prisma.FieldRef<"SessionEditRequest", 'DateTime'>
  readonly appliedBy: Prisma.FieldRef<"SessionEditRequest", 'String'>
}
    

// Custom InputTypes
/**
 * SessionEditRequest findUnique
 */
export type SessionEditRequestFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter, which SessionEditRequest to fetch.
   */
  where: Prisma.SessionEditRequestWhereUniqueInput
}

/**
 * SessionEditRequest findUniqueOrThrow
 */
export type SessionEditRequestFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter, which SessionEditRequest to fetch.
   */
  where: Prisma.SessionEditRequestWhereUniqueInput
}

/**
 * SessionEditRequest findFirst
 */
export type SessionEditRequestFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter, which SessionEditRequest to fetch.
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SessionEditRequests to fetch.
   */
  orderBy?: Prisma.SessionEditRequestOrderByWithRelationInput | Prisma.SessionEditRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for SessionEditRequests.
   */
  cursor?: Prisma.SessionEditRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SessionEditRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SessionEditRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of SessionEditRequests.
   */
  distinct?: Prisma.SessionEditRequestScalarFieldEnum | Prisma.SessionEditRequestScalarFieldEnum[]
}

/**
 * SessionEditRequest findFirstOrThrow
 */
export type SessionEditRequestFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter, which SessionEditRequest to fetch.
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SessionEditRequests to fetch.
   */
  orderBy?: Prisma.SessionEditRequestOrderByWithRelationInput | Prisma.SessionEditRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for SessionEditRequests.
   */
  cursor?: Prisma.SessionEditRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SessionEditRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SessionEditRequests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of SessionEditRequests.
   */
  distinct?: Prisma.SessionEditRequestScalarFieldEnum | Prisma.SessionEditRequestScalarFieldEnum[]
}

/**
 * SessionEditRequest findMany
 */
export type SessionEditRequestFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter, which SessionEditRequests to fetch.
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SessionEditRequests to fetch.
   */
  orderBy?: Prisma.SessionEditRequestOrderByWithRelationInput | Prisma.SessionEditRequestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing SessionEditRequests.
   */
  cursor?: Prisma.SessionEditRequestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SessionEditRequests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SessionEditRequests.
   */
  skip?: number
  distinct?: Prisma.SessionEditRequestScalarFieldEnum | Prisma.SessionEditRequestScalarFieldEnum[]
}

/**
 * SessionEditRequest create
 */
export type SessionEditRequestCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * The data needed to create a SessionEditRequest.
   */
  data: Prisma.XOR<Prisma.SessionEditRequestCreateInput, Prisma.SessionEditRequestUncheckedCreateInput>
}

/**
 * SessionEditRequest createMany
 */
export type SessionEditRequestCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many SessionEditRequests.
   */
  data: Prisma.SessionEditRequestCreateManyInput | Prisma.SessionEditRequestCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * SessionEditRequest createManyAndReturn
 */
export type SessionEditRequestCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * The data used to create many SessionEditRequests.
   */
  data: Prisma.SessionEditRequestCreateManyInput | Prisma.SessionEditRequestCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * SessionEditRequest update
 */
export type SessionEditRequestUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * The data needed to update a SessionEditRequest.
   */
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateInput, Prisma.SessionEditRequestUncheckedUpdateInput>
  /**
   * Choose, which SessionEditRequest to update.
   */
  where: Prisma.SessionEditRequestWhereUniqueInput
}

/**
 * SessionEditRequest updateMany
 */
export type SessionEditRequestUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update SessionEditRequests.
   */
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateManyMutationInput, Prisma.SessionEditRequestUncheckedUpdateManyInput>
  /**
   * Filter which SessionEditRequests to update
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * Limit how many SessionEditRequests to update.
   */
  limit?: number
}

/**
 * SessionEditRequest updateManyAndReturn
 */
export type SessionEditRequestUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * The data used to update SessionEditRequests.
   */
  data: Prisma.XOR<Prisma.SessionEditRequestUpdateManyMutationInput, Prisma.SessionEditRequestUncheckedUpdateManyInput>
  /**
   * Filter which SessionEditRequests to update
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * Limit how many SessionEditRequests to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * SessionEditRequest upsert
 */
export type SessionEditRequestUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * The filter to search for the SessionEditRequest to update in case it exists.
   */
  where: Prisma.SessionEditRequestWhereUniqueInput
  /**
   * In case the SessionEditRequest found by the `where` argument doesn't exist, create a new SessionEditRequest with this data.
   */
  create: Prisma.XOR<Prisma.SessionEditRequestCreateInput, Prisma.SessionEditRequestUncheckedCreateInput>
  /**
   * In case the SessionEditRequest was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.SessionEditRequestUpdateInput, Prisma.SessionEditRequestUncheckedUpdateInput>
}

/**
 * SessionEditRequest delete
 */
export type SessionEditRequestDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
  /**
   * Filter which SessionEditRequest to delete.
   */
  where: Prisma.SessionEditRequestWhereUniqueInput
}

/**
 * SessionEditRequest deleteMany
 */
export type SessionEditRequestDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which SessionEditRequests to delete
   */
  where?: Prisma.SessionEditRequestWhereInput
  /**
   * Limit how many SessionEditRequests to delete.
   */
  limit?: number
}

/**
 * SessionEditRequest.proposer
 */
export type SessionEditRequest$proposerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * SessionEditRequest.reviewer
 */
export type SessionEditRequest$reviewerArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * SessionEditRequest without action
 */
export type SessionEditRequestDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SessionEditRequest
   */
  select?: Prisma.SessionEditRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SessionEditRequest
   */
  omit?: Prisma.SessionEditRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionEditRequestInclude<ExtArgs> | null
}
